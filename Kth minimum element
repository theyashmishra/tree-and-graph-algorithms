
Node* kthSmallest(Node* root, int& count, int k) 
{ 
	// base case 
	if (root == NULL) 
		return NULL; 

	// search in left subtree 
	Node* left = kthSmallest(root->left, count, k); 

	// if k'th smallest is found in left subtree, return it 
	if (left != NULL) 
		return left; 

	// if current element is k'th smallest, return it 
	count++; 
	if (count == k) 
		return root; 

	// else search in right subtree 
	return kthSmallest(root->right, count, k); 
} 
